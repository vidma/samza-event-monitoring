# Job
job.name=ping-monitor

# Task
task.class=vinted.ping-monitor.PingMonitorTask
task.inputs=kafka.udp-events
task.window.ms=3000

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
# TODO: input? I will need binary or Avro...
systems.kafka.samza.msg.serde=json
# TODO: kafka input serde=bytes
systems.kafka.consumer.auto.offset.reset=largest

# Normally, we'd set this much higher, but we want things to look snappy in the demo.
systems.kafka.producer.batch.num.messages=1

# TODO: Normally, we'd set this much higher, but we want things to look snappy in the demo.
# TODO: stores?
#stores.wikipedia-stats.write.batch.size=0
#stores.wikipedia-stats.object.cache.size=0

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.bytes.class=org.apache.samza.serializers.ByteSerdeFactory

# Environment config
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.producer.metadata.broker.list=localhost:9092
systems.kafka.producer.producer.type=sync

# YARN
# TODO: fill in the version automatically
yarn.package.path=/Users/vidma-vinted/vinted/samza-ping-monitoring/target/samza-ping-monitoring-0.1.0-SNAPSHOT-dist.tar.gz
# TODO: yarn.package.path=hdfs://big-data/user/vzemleris/samza/samza-job-package-0.7.0-dist.tar.gz
#job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.factory.class=org.apache.samza.job.local.LocalJobFactory
